apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
data:
  enabled_plugins: |
      [rabbitmq_management,rabbitmq_peer_discovery_k8s].

  rabbitmq.conf: |
      cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
      cluster_formation.k8s.address_type = hostname
      cluster_formation.node_cleanup.interval = 30
      cluster_formation.node_cleanup.only_log_warning = true
      cluster_partition_handling = autoheal
      queue_master_locator=min-masters
      management.listener.port = 15672
      management.listener.ssl = true
      management.listener.ssl_opts.cacertfile = /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      management.listener.ssl_opts.certfile = /certs/rabbitmq/cert.pem
      management.listener.ssl_opts.fail_if_no_peer_cert = false
      management.listener.ssl_opts.keyfile = /certs/rabbitmq/key.pem
      management.listener.ssl_opts.verify = verify_none 
      management.load_definitions = /etc/rabbitmq/definitions.json
      loopback_users.guest = false
      listeners.ssl.default = 5671
      ssl_options.cacertfile = /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      ssl_options.certfile = /certs/rabbitmq/cert.pem
      ssl_options.fail_if_no_peer_cert = true
      ssl_options.keyfile = /certs/rabbitmq/key.pem
      ssl_options.verify = verify_peer

  definitions.json: |
      {
        "users":[
          {"name":"REPLACE_WITH_USERNAME","password":"REPLACE_WITH_PASSWORD","tags":"administrator"}
        ],
        "vhosts":[
          {"name":"/"}
        ],
        "permissions":[
          {"user":"REPLACE_WITH_USERNAME","vhost":"/","configure":".*","write":".*","read":".*"}
        ]
      }
